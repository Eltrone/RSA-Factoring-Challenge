#!/usr/bin/env python3
import math
import random

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollard_rho(n):
    if n % 2 == 0:
        return 2

    x = random.randint(1, n-1)
    y = x
    c = random.randint(1, n-1)
    d = 1

    while d == 1:
        x = (x*x + c) % n
        y = (y*y + c) % n
        y = (y*y + c) % n
        d = gcd(abs(x-y), n)

    return d

def factorize(n):
    if n <= 1:
        return 1, n

    factor = pollard_rho(n)
    if factor == n:
        return 1, n

    other_factor = n // factor
    return max(factor, other_factor), min(factor, other_factor)

def process_file(filename):
    with open(filename, 'r') as file:
        for line in file:
            number = int(line.strip())
            p, q = factorize(number)
            print(f"{number}={p}*{q}")

if __name__ == "__main__":
    import sys
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
    else:
        process_file(sys.argv[1])
